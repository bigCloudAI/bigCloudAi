package cn.com.andiOs.entry.rbac;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

import org.springframework.stereotype.Component;

/**
 * Model class of 用户表.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Component
@Entity
public class User implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** id. */
	@Id
	@GeneratedValue
	private Integer id;

	/** name. */
	@Column(name="name",columnDefinition = "varchar(20) default '' COMMENT 'name : 姓名'", length=20, nullable=false, unique = false)
	private String name;
	
	
	/** name. */
	@Column(name="pwd",columnDefinition = "varchar(32) default '' COMMENT 'pwd : 密码'", length=20, nullable=true, unique = false)
	private String pwd;

	/** email. */
	@Column(name="email",columnDefinition = "varchar(30) default '' COMMENT 'email : 邮箱'", length=30, nullable=true, unique = false)
	private String email;

	/** qq. */
	@Column(name="qq",columnDefinition = "varchar(12) default '' COMMENT 'qq'", length=12, nullable=true, unique = false)
	private String qq;

	/** wechat. */
	@Column(name="wechat",columnDefinition = "varchar(12) default '' COMMENT '微信'", length=12, nullable=true, unique = false)
	private String wechat;

	/** phone. */
	@Column(name="phone",columnDefinition = "varchar(12) default '' COMMENT '电话'", length=12, nullable=true, unique = false)
	private String phone;

	/** is_admin. */
	@Column(name="isAdmin",columnDefinition = "int(1) DEFAULT 0 NOT NULL COMMENT 'is_admin : 是否是超级管理员 1是 0不是'", length=1, nullable=false, unique = false)
	private int isAdmin;

	/** status. */
	@Column(name="status",columnDefinition = "tinyint(1) DEFAULT 0 NOT NULL COMMENT 'is_admin : 是否是超级管理员 1是 0不是'", length=1, nullable=false, unique = false)
	private int status;

	/** updated_time. */
	@Column(name="updatedTime",columnDefinition = "timestamp DEFAULT '0000-00-00 00:00:00' NOT NULL COMMENT 'updated_time : 最后一次更新时间'", nullable=false, unique = false)
	private Date updatedTime;

	/** created_time. */
	@Column(name="createdTime",columnDefinition = "timestamp DEFAULT '0000-00-00 00:00:00' NOT NULL COMMENT 'created_time : 插入时间'", nullable=false, unique = false)
	private Date createdTime;

	/**
	 * Constructor.
	 */
	public User() {
	}

	/**
	 * Set the id.
	 * 
	 * @param id
	 *            id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Get the id.
	 * 
	 * @return id
	 */
	public Integer getId() {
		return this.id;
	}

	/**
	 * Set the name.
	 * 
	 * @param name
	 *            name
	 */
	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Get the name.
	 * 
	 * @return name
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * Set the email.
	 * 
	 * @param email
	 *            email
	 */
	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * Get the email.
	 * 
	 * @return email
	 */
	public String getEmail() {
		return this.email;
	}

	/**
	 * Set the qq.
	 * 
	 * @param qq
	 *            qq
	 */
	public void setQq(String qq) {
		this.qq = qq;
	}

	/**
	 * Get the qq.
	 * 
	 * @return qq
	 */
	public String getQq() {
		return this.qq;
	}

	/**
	 * Set the wechat.
	 * 
	 * @param wechat
	 *            wechat
	 */
	public void setWechat(String wechat) {
		this.wechat = wechat;
	}

	/**
	 * Get the wechat.
	 * 
	 * @return wechat
	 */
	public String getWechat() {
		return this.wechat;
	}

	/**
	 * Set the phone.
	 * 
	 * @param phone
	 *            phone
	 */
	public void setPhone(String phone) {
		this.phone = phone;
	}

	/**
	 * Get the phone.
	 * 
	 * @return phone
	 */
	public String getPhone() {
		return this.phone;
	}

	/**
	 * Set the is_admin.
	 * 
	 * @param isAdmin
	 *            is_admin
	 */
	public void setIsAdmin(int isAdmin) {
		this.isAdmin = isAdmin;
	}

	/**
	 * Get the is_admin.
	 * 
	 * @return is_admin
	 */
	public int getIsAdmin() {
		return this.isAdmin;
	}

	/**
	 * Set the status.
	 * 
	 * @param status
	 *            status
	 */
	public void setStatus(int status) {
		this.status = status;
	}

	/**
	 * Get the status.
	 * 
	 * @return status
	 */
	public int getStatus() {
		return this.status;
	}

	/**
	 * Set the updated_time.
	 * 
	 * @param updatedTime
	 *            updated_time
	 */
	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

	/**
	 * Get the updated_time.
	 * 
	 * @return updated_time
	 */
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	/**
	 * Set the created_time.
	 * 
	 * @param createdTime
	 *            created_time
	 */
	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	/**
	 * Get the created_time.
	 * 
	 * @return created_time
	 */
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public String getPwd() {
		return pwd;
	}

	public void setPwd(String pwd) {
		this.pwd = pwd;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		User other = (User) obj;
		if (id == null) {
			if (other.id != null) {
				return false;
			}
		} else if (!id.equals(other.id)) {
			return false;
		}
		return true;
	}

}
